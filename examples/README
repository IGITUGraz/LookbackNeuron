INTRODUCTION:

   This test suite contains a sample model izhiktestmodule. That
   tests Lookback by implementing L1 normalization of incoming weights

CONTENTS OF TEST SUITE:

   1. 3 Python tests
   2. A NEST-Module 'izhiktestmodule' (src code in IzhikTestModule/
      directory)
   3. A build script do build and install the nest module

IMPORTANT POINTS TO NOTE:
   
   1. The compiler used to compile NEST will be the same compiler
      that is used to build this (ensured by th cmake script)

   2. This compiler must have basic C++11 support (tested success-
      fully on 4.9.2)

   3. The nest source directory must contain the header files lookback_...
      this can be acheived by cloning off the LookBackImplementation
      branch in my fork of the git repository

INSTRUCTIONS:

   1. This test test suite depends on nest::STDPConnection having
      a get_weight() method that returns the weight of the synapse.
      Since this is not true by default, before running this, make the
      appropriate edit in <nest-source-dir>/models/stdp_connection.
      Then recompile NEST with this change.

   2. Prior to running anything, you must have the nest executable
      in your path. This is accomplished by sourcing

         <NEST_INSTALL_DIR>/bin/nest_vars.sh

   3. Once that is done the script install.sh must be run FROM 
      WITHIN THIS DIRECTORY. This will compile and install the
      relevant NEST module.

   4. At this point, all the python tests become runnable.

THE TESTS:

   1. incorrectconnection.py -

      This test is designed to raise an exception. It should terminate
      with an exception containing the following message
      
      "The node being connected to by a LookBackConnectorModel is not
      itself derived from the appropriate LookBackNode"

   2. normtesting.py -

      This test is a test of a feed-forward network with one neuron.
      In the graph displaying the sum of incoming weights, you should
      notice a consistent return to a sum of 250 every 150 ms

   3. normnetworktesting.py -

      Similar to above, also tests performance, must notice return of
      sum-of-weights to 350 every 150ms
